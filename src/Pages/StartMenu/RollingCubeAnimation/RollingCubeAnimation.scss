.animation-group {
    position: relative;
    transform-style: preserve-3d;
    display: flex;
    justify-content: center;
    align-items: center;
    
    &.first-name {
        perspective: 3000px;
        min-height: 300px;
    }
    
    &.last-name {
        perspective: 3000px;
    }
}

.cube-wrapper {
    position: absolute;
    width: var(--cube-size);
    height: var(--cube-size);
    transform-style: preserve-3d;
    
    // Initial position - start above screen with X position
    transform: translateY(var(--cube-yStart, 0px)) translateX(var(--cube-xStart, 0px));
    
    // Roll-in animation first, then continuous rotation
    animation:
        roll-in var(--animation-duration, 1.5s) ease-out forwards var(--animation-delay, 0s),
        floating-movement 10s calc(1.5s + var(--animation-delay, 0s)) infinite linear;

    // Pixelated rendering for retro look
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
}

.cube {
    position: absolute;
    width: var(--cube-size);
    height: var(--cube-size);
    transform-style: preserve-3d;
}


.face {
    position: absolute;
    width: var(--cube-size);
    height: var(--cube-size);
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: 'Courier New', monospace;
    font-size: var(--font-size);
    font-weight: bold;
    backface-visibility: hidden;
    transform-origin: center center center;
    color: rgba(255, 255, 255, 0.8);

    // Pixelated rendering
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
    
    // Remove font smoothing for pixelated text
    -webkit-font-smoothing: none;
    -moz-osx-font-smoothing: unset;
}

.face span {
    z-index: 2;
    text-shadow: 
        2px 2px 3px #000000,
        1px 1px 1px #AA2F15;
    animation:
        letter-glow 6s infinite alternate forwards 3s;
}

.shadow-wrapper {
    position: absolute;
    width: var(--shadow-size);
    height: var(--shadow-size);
    perspective: 3000px;
    transform: translateX(var(--shadow-x, 0px)) translateY(var(--shadow-y, 0px));
    pointer-events: none;
    transform-style: preserve-3d;
    transform-origin: center bottom;
    animation: shadow-animation 10s calc(1.5s + var(--animation-delay, 0s)) infinite linear;
}

.shadow {
    position: absolute;
    width: var(--shadow-size);
    height: var(--shadow-size);
    background: rgba(0, 0, 0, 0.9);
    filter: blur(3px);
    opacity: 0;
    transform-origin: center bottom;
    animation: 
        shadow-fade 1s calc(0.5s + var(--animation-delay, 0s)) ease-out forwards,
        shadow-scale-only 10s calc(1.5s + var(--animation-delay, 0s)) infinite linear;
}

// Positioning for each face of the cube
.front  { 
    transform: translateZ(calc(var(--cube-size) / 2)); 
    background: var(--first-color); 
    box-shadow: 
        0 0 5px var(--first-color),
        0 0 10px var(--first-color),
        0 0 15px var(--first-color);
    animation:
        glow 6s infinite alternate forwards 3s;
}
.back   { transform: rotateY(180deg) translateZ(calc(var(--cube-size) / 2)); background: var(--first-color); }
.right  { transform: rotateY(90deg) translateZ(calc(var(--cube-size) / 2)); background: var(--second-color); }
.left   { transform: rotateY(-90deg) translateZ(calc(var(--cube-size) / 2)); background: var(--second-color); }
.top    { transform: rotateX(90deg) translateZ(calc(var(--cube-size) / 2)); background: var(--third-color); }
.bottom { transform: rotateX(-90deg) translateZ(calc(var(--cube-size) / 2)); background: var(--second-color); }

@keyframes roll-in {
    0% {
        transform:
            translateY(var(--cube-yStart, 0px)) 
            translateX(var(--cube-xStart, 0px)) 
            rotateX(720deg) 
            rotateY(360deg) 
            rotateZ(360deg);
    }
    100% {
        transform:
            translateY(var(--cube-yEnd, 0px)) 
            translateX(var(--cube-xEnd, 0px)) 
            rotateX(-15deg) 
            rotateY(0deg) 
            rotateZ(0deg);
            
    }
}

@keyframes floating-movement {
    0% { 
        transform: 
            translateY(var(--cube-yEnd, 0px)) 
            translateX(var(--cube-xEnd, 0px))
            rotateX(-15deg);
    }
    25% { 
        transform: 
            translateY(calc(var(--cube-yEnd, 0px) + var(--floating-y-offset, 0px))) 
            translateX(var(--cube-xEnd, 0px)) 
            rotateX(calc(-15deg + var(--floating-x-rotate, -15deg)));
    }
    50% { 
        transform: 
            translateY(calc(var(--cube-yEnd, 0px) + var(--floating-y-offset, 0px) / 2)) 
            translateX(calc(var(--cube-xEnd, 0px) + var(--floating-x-offset, 0px))) 
            rotateX(calc(-15deg + var(--floating-x-rotate, -15deg) / 2));
    }
    75% { 
        transform: 
            translateY(calc(var(--cube-yEnd, 0px) - var(--floating-y-offset, 0px))) 
            translateX(calc(var(--cube-xEnd, 0px) - var(--floating-x-offset, 0px) / 2)) 
            rotateX(calc(-15deg - var(--floating-x-rotate, -15deg) / 2));
    }
    100% { 
        transform: 
            translateY(var(--cube-yEnd, 0px)) 
            translateX(var(--cube-xEnd, 0px)) 
            rotateX(-15deg);
    }
}

@keyframes shadow-fade {
    0% { 
        opacity: 0; 
        transform: translateY(300px) rotateX(90deg) scale(0.1);
    }
    100% { 
        opacity: 0.7; 
        transform: translateY(300px) rotateX(90deg) scale(1);
    }
}

@keyframes shadow-scale-only {
    0% {
        transform:
            translateY(300px)
            scale(100%)
            rotateX(90deg);
    }
    25% {
        transform:
            translateY(300px)
            scale(calc(100% - var(--shadow-y-offset, 0%)))
            rotateX(calc(90deg + var(--shadow-x-rotate, -15deg) / 15));
            // rotateX(90deg); --> If I dont like the 'rotateX' addition just comment these back in
    }
    50% {
        transform:
            translateY(300px)
            scale(calc(100% - var(--shadow-y-offset, 0%) / 2))
            rotateX(calc(90deg + var(--shadow-x-rotate, -15deg) / 10));
            // rotateX(90deg);
    }
    75% {
        transform:
            translateY(300px)
            scale(calc(100% + var(--shadow-y-offset, 0%)))
            rotateX(calc(90deg - var(--shadow-x-rotate, -15deg) / 5));
            // rotateX(90deg);
    }
    100% {
        transform:
            translateY(300px)
            scale(100%)
            rotateX(90deg);
    }
}

@keyframes shadow-animation {
    0% { 
        transform: 
            translateX(var(--shadow-x, 0px)) 
            translateY(var(--shadow-y, 0px));
    }
    25% { 
        transform: 
            translateX(var(--shadow-x, 0px)) 
            translateY(var(--shadow-y, 0px));
    }
    50% { 
        transform: 
            translateX(calc(var(--shadow-x, 0px) + var(--shadow-x-offset, 0px))) 
            translateY(var(--shadow-y, 0px));
    }
    75% { 
        transform: 
            translateX(calc(var(--shadow-x, 0px) - var(--shadow-x-offset, 0px) / 2)) 
            translateY(var(--shadow-y, 0px));
    }
    100% { 
        transform: 
            translateX(var(--shadow-x, 0px)) 
            translateY(var(--shadow-y, 0px));
    }
}

@keyframes glow {
    0% {
        box-shadow: 
            0 0 5px var(--first-color),
            0 0 10px var(--first-color),
            0 0 15px var(--first-color);
    }
    50% {
        box-shadow: 
            0 0 20px var(--first-color),
            0 0 40px var(--first-color),
            0 0 60px var(--first-color),
            0 0 80px var(--first-color);
    }
    100% {
        box-shadow: 
            0 0 5px var(--first-color),
            0 0 10px var(--first-color),
            0 0 15px var(--first-color);
    }
}

@keyframes letter-glow {
    0% {
        text-shadow: 
            2px 2px 3px #000000,
            1px 1px 1px #AA2F15;
    }
    50% {
        text-shadow:
            0 0 10px rgba(255, 255, 255, 0.8),
            0 0 20px rgba(255, 165, 0, 0.6),
            0 0 30px rgba(255, 69, 0, 0.4);
    }
    100% {
        text-shadow: 
            2px 2px 3px #000000,
            1px 1px 1px #AA2F15;
    }
}