/**
 * GRID SYSTEM SCSS --> MY BOOTSTRAP-INSPIRED RESPONSIVE GRID
 *
 * This SCSS file creates a complete Responsive Grid System similar to Bootstrap.
 * It uses flexbox for reliable cross-browser compatibility.
 *
 * The system is based on:
 * - 12-column grid structure
 * - 7 responsive breakpoints (xxs, xs, xm, md, lg, xl, xxl)
 * - Flexbox for layout
 * - Configurable gutters and container widths
*/
/**
 * BREAKPOINT CONFIGURATION
 * 
 * These breakpoints define when the responsive behavior kicks in.
 * Styles apply to the specified breakpoint and up.
 * 
 * xxs (0px): Base styles for all devices (portrait phones, less than 576px)
 * xs (576px): Extra small devices like landscape phones and small tablets (landscape phones, 576px and up)
 * sm (768px): Small devices like tablets (tablets, 768px and up)
 * md (992px): Medium devices like small desktops (desktops, 992px and up)
 * lg (1200px): Large devices like large desktops (large desktops, 1200px and up)
 * xl (1400px): Extra large devices like wide screens (larger desktops, 1400px and up)
 * xxl (1600px): Extra extra large devices like very wide screens (wide screens, 1600px and up)
 */
/**
 * CONTAINER MAX-WIDTHS
 *
 * These values define the maximum width of containers at each breakpoint.
 * Containers are centered and have responsive max-widths to prevent content
 * from becoming too wide on a large screen maintaining responsiveness.
 *
 * Note: By default the Grid System will assume the user is on a Small Phone
*/
/**
 * GRID SYSTEM CONFIGURATION
 *
 * Core settings that define the grid behavior:
 * - $grid-columns: total number of columns in the grid (12)
 * - $grid-gutter-width: Horizontal spacing between columns
*/
/**
 * MEDIA QUERY UTILITY MIXIN
 *
 * This mixin simplifies creating responsive styles by automatically generating
 * the appropriate media query for a given breakpoint name.
 *
 * Usage: @include media-breakpoint-up(md) { ... }
 * Result: @media (min-width: 768px) { ... }
 *
 * Special handling for 'xxs' breakpoint (0px)
 * xxs styles dont need a media query wrapper.
*/
/**
 * CONTAINER STYLES
 *
 * Containers provide the foundational wrapper for the grid system.
 * They center content horizontally and provide consistent padding. 
 *
 * .container: Has responsive max-width defined in $container-max-widths
 * .container-fluid: Spans the full width of the viewport at all breakpoints
 *
 *  Both containers have:
 *  - Horizontal padding equal to half the gutter width for alignment with columns
 *  - Auto horizontal margins to center the container
 *  - 100% width at the base (before max-width constraints)
*/
.container, .container-fluid {
  width: 100%;
  padding-right: 0.75rem;
  padding-left: 0.75rem;
  margin-right: auto;
  margin-left: auto;
}

/**
 * RESPONSIVE CONTAINER MAX-WIDTHS
 *
 * Regular containers (.container) get max-width constraints at each breakpoint
 * to prevent content from becoming too wide on large screens.
 * This loop applies each max-width at its corresponding breakpoints and up.
*/
@media (min-width: 576px) {
  .container {
    max-width: 540px;
  }
}
@media (min-width: 768px) {
  .container {
    max-width: 720px;
  }
}
@media (min-width: 992px) {
  .container {
    max-width: 960px;
  }
}
@media (min-width: 1200px) {
  .container {
    max-width: 1140px;
  }
}
@media (min-width: 1400px) {
  .container {
    max-width: 1320px;
  }
}
@media (min-width: 1600px) {
  .container {
    max-width: 1500px;
  }
}

/**
 * ROW STYLES
 *
 * Rows create horizontal groups of columns using flexbox.
 *
 * Key Behaviors:
 * - Negative margins offset column padding for edge alignment
 * - display: flex creates the flexbox container
 * - flex-wrap: wrap allows columns to wrap to new lines
*/
.row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -0.75rem;
  margin-left: -0.75rem;
}

/**
 * NO-GUTTERS MODIFIER
 *
 * The .no-gutters class removes spacing between columns by:
 * - Removing the negative margins from the row
 * - Removing padding from all child columns
 *
 * This creates a seamless layout where column content touches directly.
*/
.no-gutters {
  margin-right: 0;
  margin-left: 0;
}
.no-gutters > .col,
.no-gutters > [class*=col-] {
  padding-right: 0;
  padding-left: 0;
}

/**
 * BASE COLUMN STYLES
 *
 * The base .col class provides the foundation for all columns:
 * - flex-basis: 0 allows columns to shrink smaller than their content
 * - flex-grow: 1 makes columns expand to fill available space equally
 * - max-width: 100% prevents columns from exceeding container width
 * - Horizontal padding creates gutters between columns
 *
 * This creates equal-width columns when no specific size is specified.
*/
.col {
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
  padding-right: 0.75rem;
  padding-left: 0.75rem;
}

/**
 * RESPONSIVE COLUMN CLASSES GENERATION
 *
 * This section generates all the responsive column classes using SCSS loops.
 * For each breakpoint, it creates:
 * 1. Auto-Width Columns (.col-{breakpoint}-auto)
 * 2. Sized Columns (.col-{breakpoint}-1 through .col-{breakpoint}-12)
 * 3. Offset Classes (.offset-{breakpoint}-0 through .offset-{breakpoint}-11)
 *
 * The classes are wrapped in media queries so they only apply at the appropriate screen sizes.
*/
/**
  * AUTO-WIDTH COLUMNS
  *
  * Auto-Width Columns (.col-{breakpoint}-auto) size themselves based on their content.
  * - flex: 0 0 auto means no grow, no shrink, auto size
  * - width: auto allows natural content sizing
  * - max-width: 100% prevents overflow
  */
.col-xxs-auto {
  flex: 0 0 auto;
  width: auto;
  max-width: 100%;
}

/**
  * SIZED COLUMNS (1-12)
  *
  * Creates classes like .col-md-6, col-lg-4, etc...
  * Each column spans a percentage of the container width based on the 12-column grid.
  *
  * Formula: percentage($i / $grid-columns)
  * Examples:
  * - col-md-6 = 6/12 = 50% width
  * - col-md-4 = 4/12 = 33.333% width
  * - col-md-12 = 12/12 = 100% width
  */
.col-xxs-1 {
  flex: 0 0 8.3333333333%;
  max-width: 8.3333333333%;
}

.col-xxs-2 {
  flex: 0 0 16.6666666667%;
  max-width: 16.6666666667%;
}

.col-xxs-3 {
  flex: 0 0 25%;
  max-width: 25%;
}

.col-xxs-4 {
  flex: 0 0 33.3333333333%;
  max-width: 33.3333333333%;
}

.col-xxs-5 {
  flex: 0 0 41.6666666667%;
  max-width: 41.6666666667%;
}

.col-xxs-6 {
  flex: 0 0 50%;
  max-width: 50%;
}

.col-xxs-7 {
  flex: 0 0 58.3333333333%;
  max-width: 58.3333333333%;
}

.col-xxs-8 {
  flex: 0 0 66.6666666667%;
  max-width: 66.6666666667%;
}

.col-xxs-9 {
  flex: 0 0 75%;
  max-width: 75%;
}

.col-xxs-10 {
  flex: 0 0 83.3333333333%;
  max-width: 83.3333333333%;
}

.col-xxs-11 {
  flex: 0 0 91.6666666667%;
  max-width: 91.6666666667%;
}

.col-xxs-12 {
  flex: 0 0 100%;
  max-width: 100%;
}

/**
  * OFFSET CLASSES (0-11)
  *
  * Offset classes add left margin to push columns to the right. 
  *
  * Examples:
  * - offset-md-2 = 2/12 = 16.667% left margin
  * - offset-lg-4 = 4/12 = 33.333% left margin
  *
  * Note: We skip offset-xxs-0 since it would add no margin anyway
  */
.offset-xxs-1 {
  margin-left: 8.3333333333%;
}

.offset-xxs-2 {
  margin-left: 16.6666666667%;
}

.offset-xxs-3 {
  margin-left: 25%;
}

.offset-xxs-4 {
  margin-left: 33.3333333333%;
}

.offset-xxs-5 {
  margin-left: 41.6666666667%;
}

.offset-xxs-6 {
  margin-left: 50%;
}

.offset-xxs-7 {
  margin-left: 58.3333333333%;
}

.offset-xxs-8 {
  margin-left: 66.6666666667%;
}

.offset-xxs-9 {
  margin-left: 75%;
}

.offset-xxs-10 {
  margin-left: 83.3333333333%;
}

.offset-xxs-11 {
  margin-left: 91.6666666667%;
}

@media (min-width: 576px) {
  /**
    * AUTO-WIDTH COLUMNS
    *
    * Auto-Width Columns (.col-{breakpoint}-auto) size themselves based on their content.
    * - flex: 0 0 auto means no grow, no shrink, auto size
    * - width: auto allows natural content sizing
    * - max-width: 100% prevents overflow
    */
  .col-xs-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: 100%;
  }
  /**
    * SIZED COLUMNS (1-12)
    *
    * Creates classes like .col-md-6, col-lg-4, etc...
    * Each column spans a percentage of the container width based on the 12-column grid.
    *
    * Formula: percentage($i / $grid-columns)
    * Examples:
    * - col-md-6 = 6/12 = 50% width
    * - col-md-4 = 4/12 = 33.333% width
    * - col-md-12 = 12/12 = 100% width
    */
  .col-xs-1 {
    flex: 0 0 8.3333333333%;
    max-width: 8.3333333333%;
  }
  .col-xs-2 {
    flex: 0 0 16.6666666667%;
    max-width: 16.6666666667%;
  }
  .col-xs-3 {
    flex: 0 0 25%;
    max-width: 25%;
  }
  .col-xs-4 {
    flex: 0 0 33.3333333333%;
    max-width: 33.3333333333%;
  }
  .col-xs-5 {
    flex: 0 0 41.6666666667%;
    max-width: 41.6666666667%;
  }
  .col-xs-6 {
    flex: 0 0 50%;
    max-width: 50%;
  }
  .col-xs-7 {
    flex: 0 0 58.3333333333%;
    max-width: 58.3333333333%;
  }
  .col-xs-8 {
    flex: 0 0 66.6666666667%;
    max-width: 66.6666666667%;
  }
  .col-xs-9 {
    flex: 0 0 75%;
    max-width: 75%;
  }
  .col-xs-10 {
    flex: 0 0 83.3333333333%;
    max-width: 83.3333333333%;
  }
  .col-xs-11 {
    flex: 0 0 91.6666666667%;
    max-width: 91.6666666667%;
  }
  .col-xs-12 {
    flex: 0 0 100%;
    max-width: 100%;
  }
  /**
    * OFFSET CLASSES (0-11)
    *
    * Offset classes add left margin to push columns to the right. 
    *
    * Examples:
    * - offset-md-2 = 2/12 = 16.667% left margin
    * - offset-lg-4 = 4/12 = 33.333% left margin
    *
    * Note: We skip offset-xxs-0 since it would add no margin anyway
    */
  .offset-xs-0 {
    margin-left: 0%;
  }
  .offset-xs-1 {
    margin-left: 8.3333333333%;
  }
  .offset-xs-2 {
    margin-left: 16.6666666667%;
  }
  .offset-xs-3 {
    margin-left: 25%;
  }
  .offset-xs-4 {
    margin-left: 33.3333333333%;
  }
  .offset-xs-5 {
    margin-left: 41.6666666667%;
  }
  .offset-xs-6 {
    margin-left: 50%;
  }
  .offset-xs-7 {
    margin-left: 58.3333333333%;
  }
  .offset-xs-8 {
    margin-left: 66.6666666667%;
  }
  .offset-xs-9 {
    margin-left: 75%;
  }
  .offset-xs-10 {
    margin-left: 83.3333333333%;
  }
  .offset-xs-11 {
    margin-left: 91.6666666667%;
  }
}
@media (min-width: 768px) {
  /**
    * AUTO-WIDTH COLUMNS
    *
    * Auto-Width Columns (.col-{breakpoint}-auto) size themselves based on their content.
    * - flex: 0 0 auto means no grow, no shrink, auto size
    * - width: auto allows natural content sizing
    * - max-width: 100% prevents overflow
    */
  .col-sm-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: 100%;
  }
  /**
    * SIZED COLUMNS (1-12)
    *
    * Creates classes like .col-md-6, col-lg-4, etc...
    * Each column spans a percentage of the container width based on the 12-column grid.
    *
    * Formula: percentage($i / $grid-columns)
    * Examples:
    * - col-md-6 = 6/12 = 50% width
    * - col-md-4 = 4/12 = 33.333% width
    * - col-md-12 = 12/12 = 100% width
    */
  .col-sm-1 {
    flex: 0 0 8.3333333333%;
    max-width: 8.3333333333%;
  }
  .col-sm-2 {
    flex: 0 0 16.6666666667%;
    max-width: 16.6666666667%;
  }
  .col-sm-3 {
    flex: 0 0 25%;
    max-width: 25%;
  }
  .col-sm-4 {
    flex: 0 0 33.3333333333%;
    max-width: 33.3333333333%;
  }
  .col-sm-5 {
    flex: 0 0 41.6666666667%;
    max-width: 41.6666666667%;
  }
  .col-sm-6 {
    flex: 0 0 50%;
    max-width: 50%;
  }
  .col-sm-7 {
    flex: 0 0 58.3333333333%;
    max-width: 58.3333333333%;
  }
  .col-sm-8 {
    flex: 0 0 66.6666666667%;
    max-width: 66.6666666667%;
  }
  .col-sm-9 {
    flex: 0 0 75%;
    max-width: 75%;
  }
  .col-sm-10 {
    flex: 0 0 83.3333333333%;
    max-width: 83.3333333333%;
  }
  .col-sm-11 {
    flex: 0 0 91.6666666667%;
    max-width: 91.6666666667%;
  }
  .col-sm-12 {
    flex: 0 0 100%;
    max-width: 100%;
  }
  /**
    * OFFSET CLASSES (0-11)
    *
    * Offset classes add left margin to push columns to the right. 
    *
    * Examples:
    * - offset-md-2 = 2/12 = 16.667% left margin
    * - offset-lg-4 = 4/12 = 33.333% left margin
    *
    * Note: We skip offset-xxs-0 since it would add no margin anyway
    */
  .offset-sm-0 {
    margin-left: 0%;
  }
  .offset-sm-1 {
    margin-left: 8.3333333333%;
  }
  .offset-sm-2 {
    margin-left: 16.6666666667%;
  }
  .offset-sm-3 {
    margin-left: 25%;
  }
  .offset-sm-4 {
    margin-left: 33.3333333333%;
  }
  .offset-sm-5 {
    margin-left: 41.6666666667%;
  }
  .offset-sm-6 {
    margin-left: 50%;
  }
  .offset-sm-7 {
    margin-left: 58.3333333333%;
  }
  .offset-sm-8 {
    margin-left: 66.6666666667%;
  }
  .offset-sm-9 {
    margin-left: 75%;
  }
  .offset-sm-10 {
    margin-left: 83.3333333333%;
  }
  .offset-sm-11 {
    margin-left: 91.6666666667%;
  }
}
@media (min-width: 992px) {
  /**
    * AUTO-WIDTH COLUMNS
    *
    * Auto-Width Columns (.col-{breakpoint}-auto) size themselves based on their content.
    * - flex: 0 0 auto means no grow, no shrink, auto size
    * - width: auto allows natural content sizing
    * - max-width: 100% prevents overflow
    */
  .col-md-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: 100%;
  }
  /**
    * SIZED COLUMNS (1-12)
    *
    * Creates classes like .col-md-6, col-lg-4, etc...
    * Each column spans a percentage of the container width based on the 12-column grid.
    *
    * Formula: percentage($i / $grid-columns)
    * Examples:
    * - col-md-6 = 6/12 = 50% width
    * - col-md-4 = 4/12 = 33.333% width
    * - col-md-12 = 12/12 = 100% width
    */
  .col-md-1 {
    flex: 0 0 8.3333333333%;
    max-width: 8.3333333333%;
  }
  .col-md-2 {
    flex: 0 0 16.6666666667%;
    max-width: 16.6666666667%;
  }
  .col-md-3 {
    flex: 0 0 25%;
    max-width: 25%;
  }
  .col-md-4 {
    flex: 0 0 33.3333333333%;
    max-width: 33.3333333333%;
  }
  .col-md-5 {
    flex: 0 0 41.6666666667%;
    max-width: 41.6666666667%;
  }
  .col-md-6 {
    flex: 0 0 50%;
    max-width: 50%;
  }
  .col-md-7 {
    flex: 0 0 58.3333333333%;
    max-width: 58.3333333333%;
  }
  .col-md-8 {
    flex: 0 0 66.6666666667%;
    max-width: 66.6666666667%;
  }
  .col-md-9 {
    flex: 0 0 75%;
    max-width: 75%;
  }
  .col-md-10 {
    flex: 0 0 83.3333333333%;
    max-width: 83.3333333333%;
  }
  .col-md-11 {
    flex: 0 0 91.6666666667%;
    max-width: 91.6666666667%;
  }
  .col-md-12 {
    flex: 0 0 100%;
    max-width: 100%;
  }
  /**
    * OFFSET CLASSES (0-11)
    *
    * Offset classes add left margin to push columns to the right. 
    *
    * Examples:
    * - offset-md-2 = 2/12 = 16.667% left margin
    * - offset-lg-4 = 4/12 = 33.333% left margin
    *
    * Note: We skip offset-xxs-0 since it would add no margin anyway
    */
  .offset-md-0 {
    margin-left: 0%;
  }
  .offset-md-1 {
    margin-left: 8.3333333333%;
  }
  .offset-md-2 {
    margin-left: 16.6666666667%;
  }
  .offset-md-3 {
    margin-left: 25%;
  }
  .offset-md-4 {
    margin-left: 33.3333333333%;
  }
  .offset-md-5 {
    margin-left: 41.6666666667%;
  }
  .offset-md-6 {
    margin-left: 50%;
  }
  .offset-md-7 {
    margin-left: 58.3333333333%;
  }
  .offset-md-8 {
    margin-left: 66.6666666667%;
  }
  .offset-md-9 {
    margin-left: 75%;
  }
  .offset-md-10 {
    margin-left: 83.3333333333%;
  }
  .offset-md-11 {
    margin-left: 91.6666666667%;
  }
}
@media (min-width: 1200px) {
  /**
    * AUTO-WIDTH COLUMNS
    *
    * Auto-Width Columns (.col-{breakpoint}-auto) size themselves based on their content.
    * - flex: 0 0 auto means no grow, no shrink, auto size
    * - width: auto allows natural content sizing
    * - max-width: 100% prevents overflow
    */
  .col-lg-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: 100%;
  }
  /**
    * SIZED COLUMNS (1-12)
    *
    * Creates classes like .col-md-6, col-lg-4, etc...
    * Each column spans a percentage of the container width based on the 12-column grid.
    *
    * Formula: percentage($i / $grid-columns)
    * Examples:
    * - col-md-6 = 6/12 = 50% width
    * - col-md-4 = 4/12 = 33.333% width
    * - col-md-12 = 12/12 = 100% width
    */
  .col-lg-1 {
    flex: 0 0 8.3333333333%;
    max-width: 8.3333333333%;
  }
  .col-lg-2 {
    flex: 0 0 16.6666666667%;
    max-width: 16.6666666667%;
  }
  .col-lg-3 {
    flex: 0 0 25%;
    max-width: 25%;
  }
  .col-lg-4 {
    flex: 0 0 33.3333333333%;
    max-width: 33.3333333333%;
  }
  .col-lg-5 {
    flex: 0 0 41.6666666667%;
    max-width: 41.6666666667%;
  }
  .col-lg-6 {
    flex: 0 0 50%;
    max-width: 50%;
  }
  .col-lg-7 {
    flex: 0 0 58.3333333333%;
    max-width: 58.3333333333%;
  }
  .col-lg-8 {
    flex: 0 0 66.6666666667%;
    max-width: 66.6666666667%;
  }
  .col-lg-9 {
    flex: 0 0 75%;
    max-width: 75%;
  }
  .col-lg-10 {
    flex: 0 0 83.3333333333%;
    max-width: 83.3333333333%;
  }
  .col-lg-11 {
    flex: 0 0 91.6666666667%;
    max-width: 91.6666666667%;
  }
  .col-lg-12 {
    flex: 0 0 100%;
    max-width: 100%;
  }
  /**
    * OFFSET CLASSES (0-11)
    *
    * Offset classes add left margin to push columns to the right. 
    *
    * Examples:
    * - offset-md-2 = 2/12 = 16.667% left margin
    * - offset-lg-4 = 4/12 = 33.333% left margin
    *
    * Note: We skip offset-xxs-0 since it would add no margin anyway
    */
  .offset-lg-0 {
    margin-left: 0%;
  }
  .offset-lg-1 {
    margin-left: 8.3333333333%;
  }
  .offset-lg-2 {
    margin-left: 16.6666666667%;
  }
  .offset-lg-3 {
    margin-left: 25%;
  }
  .offset-lg-4 {
    margin-left: 33.3333333333%;
  }
  .offset-lg-5 {
    margin-left: 41.6666666667%;
  }
  .offset-lg-6 {
    margin-left: 50%;
  }
  .offset-lg-7 {
    margin-left: 58.3333333333%;
  }
  .offset-lg-8 {
    margin-left: 66.6666666667%;
  }
  .offset-lg-9 {
    margin-left: 75%;
  }
  .offset-lg-10 {
    margin-left: 83.3333333333%;
  }
  .offset-lg-11 {
    margin-left: 91.6666666667%;
  }
}
@media (min-width: 1400px) {
  /**
    * AUTO-WIDTH COLUMNS
    *
    * Auto-Width Columns (.col-{breakpoint}-auto) size themselves based on their content.
    * - flex: 0 0 auto means no grow, no shrink, auto size
    * - width: auto allows natural content sizing
    * - max-width: 100% prevents overflow
    */
  .col-xl-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: 100%;
  }
  /**
    * SIZED COLUMNS (1-12)
    *
    * Creates classes like .col-md-6, col-lg-4, etc...
    * Each column spans a percentage of the container width based on the 12-column grid.
    *
    * Formula: percentage($i / $grid-columns)
    * Examples:
    * - col-md-6 = 6/12 = 50% width
    * - col-md-4 = 4/12 = 33.333% width
    * - col-md-12 = 12/12 = 100% width
    */
  .col-xl-1 {
    flex: 0 0 8.3333333333%;
    max-width: 8.3333333333%;
  }
  .col-xl-2 {
    flex: 0 0 16.6666666667%;
    max-width: 16.6666666667%;
  }
  .col-xl-3 {
    flex: 0 0 25%;
    max-width: 25%;
  }
  .col-xl-4 {
    flex: 0 0 33.3333333333%;
    max-width: 33.3333333333%;
  }
  .col-xl-5 {
    flex: 0 0 41.6666666667%;
    max-width: 41.6666666667%;
  }
  .col-xl-6 {
    flex: 0 0 50%;
    max-width: 50%;
  }
  .col-xl-7 {
    flex: 0 0 58.3333333333%;
    max-width: 58.3333333333%;
  }
  .col-xl-8 {
    flex: 0 0 66.6666666667%;
    max-width: 66.6666666667%;
  }
  .col-xl-9 {
    flex: 0 0 75%;
    max-width: 75%;
  }
  .col-xl-10 {
    flex: 0 0 83.3333333333%;
    max-width: 83.3333333333%;
  }
  .col-xl-11 {
    flex: 0 0 91.6666666667%;
    max-width: 91.6666666667%;
  }
  .col-xl-12 {
    flex: 0 0 100%;
    max-width: 100%;
  }
  /**
    * OFFSET CLASSES (0-11)
    *
    * Offset classes add left margin to push columns to the right. 
    *
    * Examples:
    * - offset-md-2 = 2/12 = 16.667% left margin
    * - offset-lg-4 = 4/12 = 33.333% left margin
    *
    * Note: We skip offset-xxs-0 since it would add no margin anyway
    */
  .offset-xl-0 {
    margin-left: 0%;
  }
  .offset-xl-1 {
    margin-left: 8.3333333333%;
  }
  .offset-xl-2 {
    margin-left: 16.6666666667%;
  }
  .offset-xl-3 {
    margin-left: 25%;
  }
  .offset-xl-4 {
    margin-left: 33.3333333333%;
  }
  .offset-xl-5 {
    margin-left: 41.6666666667%;
  }
  .offset-xl-6 {
    margin-left: 50%;
  }
  .offset-xl-7 {
    margin-left: 58.3333333333%;
  }
  .offset-xl-8 {
    margin-left: 66.6666666667%;
  }
  .offset-xl-9 {
    margin-left: 75%;
  }
  .offset-xl-10 {
    margin-left: 83.3333333333%;
  }
  .offset-xl-11 {
    margin-left: 91.6666666667%;
  }
}
@media (min-width: 1600px) {
  /**
    * AUTO-WIDTH COLUMNS
    *
    * Auto-Width Columns (.col-{breakpoint}-auto) size themselves based on their content.
    * - flex: 0 0 auto means no grow, no shrink, auto size
    * - width: auto allows natural content sizing
    * - max-width: 100% prevents overflow
    */
  .col-xxl-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: 100%;
  }
  /**
    * SIZED COLUMNS (1-12)
    *
    * Creates classes like .col-md-6, col-lg-4, etc...
    * Each column spans a percentage of the container width based on the 12-column grid.
    *
    * Formula: percentage($i / $grid-columns)
    * Examples:
    * - col-md-6 = 6/12 = 50% width
    * - col-md-4 = 4/12 = 33.333% width
    * - col-md-12 = 12/12 = 100% width
    */
  .col-xxl-1 {
    flex: 0 0 8.3333333333%;
    max-width: 8.3333333333%;
  }
  .col-xxl-2 {
    flex: 0 0 16.6666666667%;
    max-width: 16.6666666667%;
  }
  .col-xxl-3 {
    flex: 0 0 25%;
    max-width: 25%;
  }
  .col-xxl-4 {
    flex: 0 0 33.3333333333%;
    max-width: 33.3333333333%;
  }
  .col-xxl-5 {
    flex: 0 0 41.6666666667%;
    max-width: 41.6666666667%;
  }
  .col-xxl-6 {
    flex: 0 0 50%;
    max-width: 50%;
  }
  .col-xxl-7 {
    flex: 0 0 58.3333333333%;
    max-width: 58.3333333333%;
  }
  .col-xxl-8 {
    flex: 0 0 66.6666666667%;
    max-width: 66.6666666667%;
  }
  .col-xxl-9 {
    flex: 0 0 75%;
    max-width: 75%;
  }
  .col-xxl-10 {
    flex: 0 0 83.3333333333%;
    max-width: 83.3333333333%;
  }
  .col-xxl-11 {
    flex: 0 0 91.6666666667%;
    max-width: 91.6666666667%;
  }
  .col-xxl-12 {
    flex: 0 0 100%;
    max-width: 100%;
  }
  /**
    * OFFSET CLASSES (0-11)
    *
    * Offset classes add left margin to push columns to the right. 
    *
    * Examples:
    * - offset-md-2 = 2/12 = 16.667% left margin
    * - offset-lg-4 = 4/12 = 33.333% left margin
    *
    * Note: We skip offset-xxs-0 since it would add no margin anyway
    */
  .offset-xxl-0 {
    margin-left: 0%;
  }
  .offset-xxl-1 {
    margin-left: 8.3333333333%;
  }
  .offset-xxl-2 {
    margin-left: 16.6666666667%;
  }
  .offset-xxl-3 {
    margin-left: 25%;
  }
  .offset-xxl-4 {
    margin-left: 33.3333333333%;
  }
  .offset-xxl-5 {
    margin-left: 41.6666666667%;
  }
  .offset-xxl-6 {
    margin-left: 50%;
  }
  .offset-xxl-7 {
    margin-left: 58.3333333333%;
  }
  .offset-xxl-8 {
    margin-left: 66.6666666667%;
  }
  .offset-xxl-9 {
    margin-left: 75%;
  }
  .offset-xxl-10 {
    margin-left: 83.3333333333%;
  }
  .offset-xxl-11 {
    margin-left: 91.6666666667%;
  }
}
/**
 * BASE COLUMNS CLASSES (XXS BREAKPOINT)
 *
 * These classes work at all screen sizes since they have no media query wrapper.
 * They are equivalent to the xxs breakpoint classes but with shorter names.
*/
/**
 * .col-auto: Auto-width column for all screen sizes
 * Equivalent to .col-xxs-auto
*/
.col-auto {
  flex: 0 0 auto;
  width: auto;
  max-width: 100%;
}

/**
 * .col-1 through .col-12: Fixed-width columns all screen sizes
 * These provide base column sizes that apply at all breakpoints
 * Equivalent to .col-xxs-1, .col-xxs-2, etc...
*/
.col-1 {
  flex: 0 0 8.3333333333%;
  max-width: 8.3333333333%;
}

.col-2 {
  flex: 0 0 16.6666666667%;
  max-width: 16.6666666667%;
}

.col-3 {
  flex: 0 0 25%;
  max-width: 25%;
}

.col-4 {
  flex: 0 0 33.3333333333%;
  max-width: 33.3333333333%;
}

.col-5 {
  flex: 0 0 41.6666666667%;
  max-width: 41.6666666667%;
}

.col-6 {
  flex: 0 0 50%;
  max-width: 50%;
}

.col-7 {
  flex: 0 0 58.3333333333%;
  max-width: 58.3333333333%;
}

.col-8 {
  flex: 0 0 66.6666666667%;
  max-width: 66.6666666667%;
}

.col-9 {
  flex: 0 0 75%;
  max-width: 75%;
}

.col-10 {
  flex: 0 0 83.3333333333%;
  max-width: 83.3333333333%;
}

.col-11 {
  flex: 0 0 91.6666666667%;
  max-width: 91.6666666667%;
}

.col-12 {
  flex: 0 0 100%;
  max-width: 100%;
}

/**
 * UNIVERSAL COLUMN PADDING
 *
 * This rule ensures that all elements with column classes get the proper padding,
 * regardless of how they are named. The [class*='col-'] selector matches any
 * element whose class contains 'col-' anywhere in the string.
 *
 * This catches:
 * - .col-md-6
 * - .col-lg-auto
 * - .col-12
 * - etc...
*/
[class*=col-] {
  padding-right: 0.75rem;
  padding-left: 0.75rem;
}
